<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="design.database.apple.mapper.AccountMapper">

    <select id="getInstallmentAccount" resultType="HashMap">
        SELECT
            u.username,a.account_number,a.balance,atype.product_name AS account_type_name,ins.product_name,ins.duration_of_month,ins.unit_deposit_amount,ins.interest,ins.saving_method,ins.deposit_cycle,ins.expiration_date
        FROM
            account a
                INNER JOIN user u ON a.user_id = u.user_id
                INNER JOIN account_type atype ON a.account_type_id = atype.product_type_id
                INNER JOIN installment_saving ins ON a.account_id = ins.account_id
        WHERE
            atype.product_name = 'installment_account';
    </select>

    <select id="getSavingAccount" resultType="HashMap">
        SELECT
            u.username,a.account_number,a.balance,atype.product_name,sav.product_name AS saving_product_name,sav.duration_months,sav.interest_rate,sav.expiration_date
        FROM
            account a
                INNER JOIN user u ON a.user_id = u.user_id
                INNER JOIN account_type atype ON a.account_type_id = atype.product_type_id
                INNER JOIN saving sav ON a.account_id = sav.account_id
        WHERE
            atype.product_name = 'saving_account';
    </select>

    <select id="getCheckingAccount" resultType="HashMap">
        SELECT
            u.username,a.account_number,a.balance,atype.product_name,c.checking_name
        FROM
            account a
                INNER JOIN user u ON a.user_id = u.user_id
                INNER JOIN account_type atype ON a.account_type_id = atype.product_type_id
                INNER JOIN checking c ON a.account_id = c.account_id
        WHERE
            atype.product_name = 'checking_account';
    </select>

    <select id="getLoanAccount" parameterType="Integer" resultType="HashMap">
        SELECT
            u.user_id,u.username,a.account_number,a.balance,l.committed_amount,l.product_name,l.expiration_date,l.interest_rate,l.payment_date,l.overdue_interest_rate, l.loan_purpose
        FROM
            account a
                INNER JOIN `user` u ON a.user_id = u.user_id
                INNER JOIN account_type atype ON a.account_type_id = atype.product_type_id
                INNER JOIN loan l ON a.account_id = l.account_id
        WHERE
            atype.product_name = 'loan_account' and
            u.user_id=#{id};
    </select>

    <insert id="insertAccount" useGeneratedKeys="true" keyProperty="account_id" parameterType="Account">
        INSERT INTO apple.account
            (user_id, account_type_id, product_id, account_number, balance)
        VALUES(3, 4, 7, generate_account_number(), 0);
    </insert>

    <insert id="insertLoan" parameterType="Integer">
        INSERT INTO apple.loan
        (account_id, product_name, committed_amount, expiration_date, interest_rate, payment_date, overdue_status, overdue_interest_rate, loan_purpose)
        VALUES(#{id}, 'CAU 원큐 대출', 100000000, '2024-12-10', 4, '2023-12-10', 1, 1, '전세대출');
    </insert>

    <select id="getCurrentAccount" parameterType="String" resultType="HashMap">
        select a.account_number, a.balance, u.* from account a join user u on u.user_id=a.user_id where account_number=#{id};
    </select>

    <select id="getNameByAccountNumber" parameterType="String" resultType="String">
        select username from user where user_id=(select user_id from account a where account_number=#{accountNumber});
    </select>

    <update id="updateBalanceByAccountNumber" parameterType="HashMap">
        update account set balance=#{balance} where account_number=#{accountNumber};
    </update>
</mapper>